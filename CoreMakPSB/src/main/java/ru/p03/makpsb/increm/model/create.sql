/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 * Author:  altmf
 * Created: 07.04.2017
 */
CREATE SCHEMA if not exists MP_INCREM;

--СПРАВОЧНИКИ
CREATE TABLE if not exists MP_INCREM.CLS_SIGNATURE_TYPE(
                                             ID              BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                             IS_DELETED      INT DEFAULT 0,
                                             NAME            TEXT,
                                             CODE            VARCHAR(255),
                                             PRIMARY KEY	 (ID)
);

CREATE TABLE if not exists MP_INCREM.CLS_SIGNATURE(
                                        ID              BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                        CODE_DYNREPORT  VARCHAR(255),
                                        ID_SIGNATURE_TYPE    BIGINT NOT NULL,
                                        IS_DELETED      INT DEFAULT 0,
                                        NAME            TEXT,
                                        CODE            VARCHAR(255),
                                        PRIMARY KEY	 (ID),
                                        CONSTRAINT FK_SIGNATURE_TYPE FOREIGN KEY (ID_SIGNATURE_TYPE) REFERENCES MP_INCREM.CLS_SIGNATURE_TYPE(ID) ON DELETE  NO ACTION ON UPDATE RESTRICT
);
ALTER TABLE MP_INCREM.CLS_SIGNATURE ADD COLUMN DESCRIPTION TEXT;

CREATE TABLE if not exists MP_INCREM.CLS_PERIOD_TYPE(
                                          ID              BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                          IS_DELETED      INT DEFAULT 0,
                                          NAME            TEXT,
                                          CODE            VARCHAR(255),
                                          PRIMARY KEY	 (ID)
);


CREATE TABLE if not exists MP_INCREM.CLS_DETECT_PERIOD(
                                            ID              BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                            ID_SIGNATURE    BIGINT NOT NULL,
                                            ID_PERIOD_TYPE  BIGINT NOT NULL,
                                            IS_DELETED      INT DEFAULT 0,
                                            DAY_OF_MONTH    INT DEFAULT 1,
                                            DAY_OF_WEEK     INT DEFAULT 1,
                                            HOUR            INT DEFAULT 23,
                                            MINUTE          INT DEFAULT 1,
                                            IS_ACTIVE       INT DEFAULT 0,
                                            PRIMARY KEY	 (ID),
                                            CONSTRAINT FK_SIGNATURE FOREIGN KEY (ID_SIGNATURE) REFERENCES MP_INCREM.CLS_SIGNATURE(ID) ON DELETE  NO ACTION ON UPDATE RESTRICT,
                                            CONSTRAINT FK_PERIOD_TYPE FOREIGN KEY (ID_PERIOD_TYPE) REFERENCES MP_INCREM.CLS_PERIOD_TYPE(ID) ON DELETE  NO ACTION ON UPDATE RESTRICT
);

-- LEVEL:
-- 1 – КРИТИЧЕСКИЙ
-- 2 – БЛОКИРУЮЩИЙ
-- 3 – СЕРЬЕЗНЫЙ
-- 4 – ПРЕДУПРЕЖДЕНИЕ/ИНФОРМАЦИЯ
-- 5 - НЕЗНАЧИТЕЛЬНЫЙ
CREATE TABLE if not exists MP_INCREM.CLS_SIGNATURE_DEPART(
                                               ID              BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                               ID_SIGNATURE_TYPE    BIGINT NOT NULL,
                                               ID_SIGNATURE    BIGINT NOT NULL,
                                               ID_DEPART       BIGINT,
                                               IS_DELETED      INT DEFAULT 0,
                                               LEVEL           INT DEFAULT 3,
                                               PRIMARY KEY	 (ID),
                                               CONSTRAINT FK_SIGNATURE FOREIGN KEY (ID_SIGNATURE) REFERENCES MP_INCREM.CLS_SIGNATURE(ID) ON DELETE  NO ACTION ON UPDATE RESTRICT,
                                               CONSTRAINT FK_SIGNATURE_TYPE FOREIGN KEY (ID_SIGNATURE_TYPE) REFERENCES MP_INCREM.CLS_SIGNATURE_TYPE(ID) ON DELETE  NO ACTION ON UPDATE RESTRICT
);

CREATE TABLE if not exists MP_INCREM.CLS_SIGNATURE_HOLDER(
                                               ID              BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                               ID_SIGNATURE_DEPART    BIGINT NOT NULL,
                                               IS_DELETED      INT DEFAULT 0,
                                               LOGIN           VARCHAR(255),
                                               PRIMARY KEY	 (ID)
);

--РЕГИСТРАЦИЯ ОШИБОК
CREATE TABLE if not exists MP_INCREM.REG_DETECTED_SIGNATURE(
                                                 ID              BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                                 ID_SIGNATURE    BIGINT NOT NULL,
                                                 ID_RAION        BIGINT NOT NULL,
                                                 IS_DELETED      INT DEFAULT 0,
                                                 TIME_DETECTED   TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
                                                 TIME_CREATE     TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
                                                 FAM             VARCHAR(255),
                                                 IM              VARCHAR(255),
                                                 OTC             VARCHAR(255),
                                                 SNILS           VARCHAR(14),
                                                 DATE_BORN       TIMESTAMP,
                                                 ADD_MESSAGE     TEXT,
                                                 PRIMARY KEY	 (ID),
                                                 CONSTRAINT FK_SIGNATURE FOREIGN KEY (ID_SIGNATURE) REFERENCES MP_INCREM.CLS_SIGNATURE(ID) ON DELETE  NO ACTION ON UPDATE RESTRICT
);
ALTER TABLE MP_INCREM.REG_DETECTED_SIGNATURE ADD COLUMN TIME_FIX TIMESTAMP;

--представления
--срез первых выявленных ошибок
CREATE OR REPLACE VIEW MP_INCREM.MIN_DETECTED_SIGNATURE (
                                                         ID,
                                                         ID_SIGNATURE,
                                                         ID_RAION,
                                                         TIME_DETECTED,
                                                         TIME_CREATE,
                                                         FAM,
                                                         IM,
                                                         OTC,
                                                         SNILS,
                                                         DATE_BORN,
                                                         ADD_MESSAGE)
AS
SELECT
    RDS.ID,
    RDS.ID_SIGNATURE,
    RDS.ID_RAION,
    RDS.TIME_DETECTED,
    RDS.TIME_CREATE,
    RDS.FAM,
    RDS.IM,
    RDS.OTC,
    RDS.SNILS,
    RDS.DATE_BORN,
    RDS.ADD_MESSAGE
FROM  MP_INCREM.REG_DETECTED_SIGNATURE AS RDS
          INNER JOIN(
    SELECT ID_SIGNATURE, ID_RAION, SNILS, MIN(TIME_CREATE) AS TIME_CREATE
    FROM  MP_INCREM.REG_DETECTED_SIGNATURE
    GROUP BY ID_SIGNATURE, ID_RAION, SNILS
) AS MIN_SLICE
                    ON RDS.ID_SIGNATURE = MIN_SLICE.ID_SIGNATURE AND RDS.ID_RAION = MIN_SLICE.ID_RAION
                        AND RDS.SNILS = MIN_SLICE.SNILS AND RDS.TIME_CREATE = MIN_SLICE.TIME_CREATE;

CREATE OR REPLACE VIEW MP_INCREM.SIGNATURE_TIMING (
                                                   ID,
                                                   ID_SIGNATURE,
                                                   ID_SIGNATURE_TYPE,
                                                   ID_PERIOD_TYPE,
                                                   DAY_OF_MONTH,
                                                   DAY_OF_WEEK,
                                                   HOUR,
                                                   MINUTE,
                                                   IS_ACTIVE,
                                                   PERIOD_TYPE_NAME,
                                                   SIGNATURE_NAME,
                                                   SIGNATURE_TYPE_NAME,
                                                   DESCRIPTION)
AS
SELECT
    CPD.ID,
    CPD.ID_SIGNATURE,
    SIG.ID_SIGNATURE_TYPE,
    CPD.ID_PERIOD_TYPE,
    CPD.DAY_OF_MONTH,
    CPD.DAY_OF_WEEK,
    CPD.HOUR,
    CPD.MINUTE,
    CPD.IS_ACTIVE,
    PT.NAME AS PERIOD_TYPE_NAME,
    SIG.NAME AS SIGNATURE_NAME,
    SIG.SIGNATURE_TYPE_NAME,
    SIG.DESCRIPTION
FROM MP_INCREM.CLS_DETECT_PERIOD  AS CPD
         LEFT JOIN MP_INCREM.CLS_PERIOD_TYPE AS PT
                   ON CPD.ID_PERIOD_TYPE = PT.ID
         LEFT JOIN (SELECT SIG.*, ST.NAME AS SIGNATURE_TYPE_NAME
                    FROM MP_INCREM.CLS_SIGNATURE AS SIG
                             LEFT JOIN MP_INCREM.CLS_SIGNATURE_TYPE AS ST
                                       ON SIG.ID_SIGNATURE_TYPE = ST.ID
) AS SIG
                   ON CPD.ID_SIGNATURE = SIG.ID
WHERE CPD.IS_DELETED = 0;

--представления
--срез последних выявленных ошибок
CREATE OR REPLACE VIEW MP_INCREM.MAX_DETECTED_SIGNATURE (
                                                         ID,
                                                         ID_SIGNATURE,
                                                         ID_RAION,
                                                         TIME_DETECTED,
                                                         TIME_CREATE,
                                                         TIME_FIX,
                                                         FAM,
                                                         IM,
                                                         OTC,
                                                         SNILS,
                                                         DATE_BORN,
                                                         ADD_MESSAGE)
AS
SELECT
    RDS.ID,
    RDS.ID_SIGNATURE,
    RDS.ID_RAION,
    RDS.TIME_DETECTED,
    RDS.TIME_CREATE,
    RDS.TIME_FIX,
    RDS.FAM,
    RDS.IM,
    RDS.OTC,
    RDS.SNILS,
    RDS.DATE_BORN,
    RDS.ADD_MESSAGE
FROM  MP_INCREM.REG_DETECTED_SIGNATURE AS RDS
          INNER JOIN(
    SELECT ID_SIGNATURE, ID_RAION, SNILS, MAX(TIME_CREATE) AS TIME_CREATE
    FROM  MP_INCREM.REG_DETECTED_SIGNATURE
    GROUP BY ID_SIGNATURE, ID_RAION, SNILS
) AS MAX_SLICE
                    ON RDS.ID_SIGNATURE = MAX_SLICE.ID_SIGNATURE AND RDS.ID_RAION = MAX_SLICE.ID_RAION
                        AND RDS.SNILS = MAX_SLICE.SNILS AND RDS.TIME_CREATE = MAX_SLICE.TIME_CREATE;

--дополнительные данные зарегистрированных ошибок
CREATE TABLE MP_INCREM.REG_DETECTED_SIGNATURE_DTL_VALUES(
                                                            ID                              BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                                            ID_REG_DETECTED_SIGNATURE       BIGINT NOT NULL,
                                                            IS_DELETED      INT DEFAULT 0,
                                                            DTL_DATA       XML,
                                                            DTL_XSLT       XML,
                                                            PRIMARY KEY	 (ID),
                                                            CONSTRAINT FK_REG_DETECTED_SIGNATURE FOREIGN KEY (ID_REG_DETECTED_SIGNATURE) REFERENCES MP_INCREM.REG_DETECTED_SIGNATURE(ID) ON DELETE  NO ACTION ON UPDATE RESTRICT
);

ALTER TABLE MAKPSB.DYN_REPORT ADD COLUMN DETAIL_COLUMNS TEXT;

--  select id, XMLCAST( XMLQUERY('$DTL_FIELD/context-param/param-name') AS VARCHAR(500)) as param_name
--  FROM MP_INCREM.REG_DTL_FIELD_DETECTED_SIGNATURE

--select id, XMLCAST( XMLQUERY('$DTL_FIELD/context-param') AS VARCHAR(500)) as param_name
--FROM MP_INCREM.REG_DTL_FIELD_DETECTED_SIGNATURE
--;
-- select id, XML2TEXT(XMLQUERY('$DTL_FIELD')) as param_name
-- FROM MP_INCREM.REG_DTL_FIELD_DETECTED_SIGNATURE